name: Run Unit Tests against source files included in a Pull Request targeting the main branch
on:
  pull_request:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.head_ref, 'release') }}
    steps:
      - name: Checkout Library Repository
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}
      - name: Identify changes in source files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'fuzzy_parser/**'
              - 'fuzzy_parser/**/*'
      - name: Run Unit Tests if change in source files is detected
        if: steps.changes.outputs.src == 'true'
        run: make utilities && make test
      - name: âœ… Set the merge commit status check using GitHub REST API
        # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
        if: ${{ success() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "Staging Tests",
            "state": "success",
            "description": "Staging tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
